TEGUS CLIENT
Hello, thanks for taking the time to speak with me today. I’m currently spending time in the e-commerce enablement and infrastructure space, specifically with some of the platforms that have emerged around this headless trend, both better understanding some of the older vendors like Salesforce and Magento and SAP Hybris and the like as well as some of the newer vendors like Commercetools, Spryker, VTEX, et cetera.
And you came up as a Commercetools' customer and has some experience with the platforms at large. So I wanted to ask you a handful of questions around your evaluation of the various products and experience using them thus far. To kick off, could you quickly give me your background and some more details around your role at Tory Burch today?
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
Yes, sure. So my role at Tory Burch, I'm the VP of Digital Engineering. And I've been with the organization for three years. The first two years is actually as a consultant, but my background is software engineering. So I started my career as a software engineer and then progressed through the various ranks where I've transitioned as the VP of Digital Engineering. So I am responsible for the technology agenda for digital platforms within Tory Burch.
TEGUS CLIENT
And does your role roll up into the CIO within the organization?
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
Yes, I'm reporting to the CIO.
TEGUS CLIENT
Great. And how big is your team?
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
My team, my team is 70 technologists in total. So it's a fully skilled team. So that covers all aspects of software engineering. So testing, front-end, core DevOps all aspects.
TEGUS CLIENT
Great. And how should we think of the rough scale of Tory Burch's online business today?
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
The scale in terms of online, it shifted obviously consistently considerably because of the pandemic last year, but it's now around 40% probably business today.
TEGUS CLIENT
Got it. Well, can you walk us through the tech stack and what things look like before you began this implementation of Commercetools?
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
Yes, sure. So when I joined the organization, Tory Burch was using Salesforce Commerce Cloud. It was actually called Demandware at that time. It was just at that point when it was acquired by Salesforce. They were one of the early customers of that platform. It served them pretty well up until that point.
But obviously, looking at the landscape, especially when you take into context, omnichannel, it wasn't necessarily the right platform for them moving forward, taking into account that they wanted to scale globally. So when I joined the organization, I made that initial assessment, and I made the decision that the right approach for them was headless.
And the reason I chose that approach primarily is if you look at any organization that has an e-commerce platform, it's pretty entrenched within the organization. And there is no longer an appetite for any organization to do what one would call a full-blown implementation or full-blown program. So that would be a program that would replace our existing e-commerce platform with another e-commerce platform.
These projects, even when you take into account agile project and delivery framework, they're pretty prolonged and they're pretty intense. And also at the time of doing that, it requires a lot of resource and it takes away our focus from other business initiatives.
So taking the organization through a headless approach, it means that we were able to replace the existing e-commerce platform piece by piece or feature by feature. So you avoid this concept of a big, large full-blown program of work and you can do it gradually over time, and you could strike that balance between adding new features that will boost your business as well as replacing the platform at the same time.
So it's a longer burn. But it's a more profitable burn because you're not holding your organization up. So that's one of the attractive approaches of taking a headless approach. That's one. Secondly, if you look at existing e-commerce platforms, so I really go back to Hybris, Salesforce Commerce Cloud, Oracle Commerce or ATG, when you bought that platform, you were buying a complete platform. So that would be covering your content management, your search experience or your browsing experience and your basket experience.
And even into the best product in the world, they're not going to be the best at everything. So you're getting an average across the board. So taking ahead of this approach, it means that at Tory Burch, we were able to be in a position because of our architecture is to actually take best of breed. So for example, our content management system is Adobe.
So we've taken over, which is probably one of the best content management platforms and we're able to leverage that fully because normally historically with e-commerce platforms, if you were to, for example, take Adobe to be your content management system and Hybris as your e-commerce platform, where these are two monoliths. They never really integrate fully together.
So you're compromising. You're either compromising your e-commerce site where you're compromised on your content management, whereas of a headless approach, you're not compromising because the architecture supports that notion of best of breed.
TEGUS CLIENT
The headless architecture allows you to do best of breed really resonates. One of the questions I have is like, what's the order of your decision making? Do you first look at the commerce engine? Or do you look at the ERP? What are the things that if you're going to upgrade from a monolithic solution to something more headless?
Which are the pieces that you kind of decide on first, if that makes sense, because there's so many once you break that a lot, right? There's a lot of different pieces. I'm just trying to think through how you guys think about that.
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
It's always e-commerce. And the reason it's the e-commerce part, again, going back to this notion of a monolith. If you think about it today, your customers, you want to be able to reach your customers in all channels. And the main part, really, when you're reaching a customer, right, you want them to be able to add something into a basket and buy your product.
So from an e-commerce perspective, the attraction with headless is the fact that they've made the core component of commerce, which is your product catalog. So making a product catalog available, making basket function available and order capture because that's really all you're getting, which is quite an important point. That's really all you're getting from a headless commerce platform is this motion article.
My catalog, being able to add something to my cart and be able to place them all that. And that's almost like the epicenter of your e-commerce platform. But what you also are gaining from a modern headless commerce platform is event-driven architecture. So this notion of, if I was to place an order or if I was to add something to my basket, that information becomes available almost instantaneously into my ERP system.
ERP systems as a general, I follow them very closely, not just in Tory Burch, but also in my previous organization, Burberry. SAP even with S/4HANA platforms, they're still largely a monolith. And so there's always going to continue to be challenges of how you integrate into those monoliths and event-driven architecture does help that.
But the thinking typically starts with your e-commerce and then from your e-commerce, you then need to have your other building blocks because that's one of the things that a lot of organizations got really excited about in the beginning when headless really arrived was first and foremost, our CFO, would say, "This is fantastic, right?"
Look at the cost of headless commerce platform compared to what we're paying for our e-comm platform. But you quickly had to kind of pull them down from the cloud and say, "Hang on a minute." What you're buying here, you're buying this notion of a way to share your catalog to your product, a way to add your products to a basket and a way to capture orders.
You'll still need to go, and you're still need to purchase a content management system. So it's something that's able to enable you to build out your UI, but more importantly, also your search experience. And when I talk about search experience, it's not so much, if I'm on an e-commerce site, my client searches in the top right corner of the magnifying glass.
All of your product listing pages that you see on an e-commerce site, all of that is powered by a search engine. So you've got your search engine, that's something that you need. You'll need your content management system, you'll need your e-comm platform. And then you typically, you will need something for customer management, so how that you can share your customers' identity across multiple channels. Those are the four main blocks.
TEGUS CLIENT
So you weren't deciding your search engine before your seven years core commerce engine, right? So you start with that. The first decision is which commerce are you going to choose and then you're kind of adding the other pieces the CMS, the searching?
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
Yes. That is like you talk. And with headless commerce following, I'm sure you've heard of it, the MAC Architecture principles. So given that they follow the MAC Architecture, that means that you've already got that standard blueprint of how you can integrate into those other platforms.
And you've probably seen through your research, but you'll see that a lot more of the historical search engines now. They are supporting MAC Architecture. So they built connectors to enable you to connect into your headless commerce engines because that is the direction of travel.
TEGUS CLIENT
So people won't start upgrading, you couldn't take like if you had a Demandware installation. You couldn't start upgrading parts of it like the search engine, CMS or the front end. You couldn't piecemeal that. I'm saying like I just want to upgrade one piece, is that just too much of a paying? Or do people do that as well?
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
No, that is the approach. So typically, what you would do is there's a natural design plan called strangling the monolith, which is you instead of replacing the monolith entirely, you replace it part by part or piece by piece. So you may start, for example, for Demandware, that's a little bit more trickier because it's a Platform as a Service. So typically, you have that question, you've got to ask yourself is I'm paying for this Platform as a Service and if I choose to now interpret another search engine, I'm adding more costs on to doing that.
And typically, because it's a Platform as a Service, it doesn't lend itself to enable to remove something like such. You could do it, it's complicated. And probably not that cost effective. But if you were using platforms, for example, like Magento or Hybris or ATG, these platforms, they still have a large market share, absolutely lends itself to that.
And you may decide at that point actually typically on business, you normally start with commerce. And the reason why you start with commerce because that's normally where you've got your biggest challenge, which is I want to have this really tailored experience, in-store customer experience, but I want to be able to add something to a basket. But hard risk platform, yes, it does have APIs that enable you to share a basket, but the platform itself doesn't support that.
So what you would typically do then is you may say, "Okay, focusing on the commerce aspect, I'll start to manage my basket in my headless engine, but I'll still use more Hybris platform to my catalog management, so my product management and my experience management." Because the other part, I've seen, and it is still one of the biggest challenges I think for any e-commerce program is typically the shift of thinking within the organization.
So if you're a Demandware customer, you're merchandising tools, all of your business teams, they will be used to working with one platform as Level 1 platform that they're working on, whereas now you're introducing this concept of, "Okay, this is the platform you're going to use to manage your search experience. This is the platform you're going to use to manage your content. This is the platform where you're going to use to manage your orders." It's a big change within an organization.
So again, the headless approach and this approach of strangling the monoliths, so taking out the best of breed enables you to kind of introduce that change over time as in an organization. And typically, that means then you're avoiding this notion of, I need to do a large program to replace my e-commerce platform, but actually not get anything at the end of it because I've had to compromise because of time. You're gradually doing over time. But at the same time, you're bringing business benefit.
TEGUS CLIENT
When you go from strangling e-commerce thing where it seems like actually replacing e-commerce engine completely their headless architecture? I'm just trying to figure out like when do you decide to do with the platform versus keep strangling your existing platform? If you have a Magento or something like that or Hybris installation? Like you said you upgrade with different piece parts. I'm trying to understand how you make the transitions, practically speaking?
Or is this something that happens when you upgrade the search engine, your upgrade a couple of things and after a year or two, this is too painful, you just should bring a new commerce engine tool? Or do you say, "Hey, look, where people are now far along in understanding the headless, they're just kind of going down the headless path much quicker."
They're just saying, "Okay, let's just go get a commerce engine that's headless and start building the best of breed around that." Do you sort of say, "Where is the market from a maturity perspective?"
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
From my experience, and when I speak to my peers, I haven't come across anyone yet. So you know what, let's just buy a headless commerce engine, start with that and start to build around it because typically, they're transitioning from one platform to another. And that transition, it depends on how disruptive you want to make that transition.
And the appetite around disruption. I want to be really clear on the disruption part. The appetite around disruption is in business disruption. So saying, "Hey, we're not going to be able to do anything for a year because we're just going to be busy just replacing the e-commerce platform. At the end of that year you're going to have exactly what you've got before. But it's time because now we'll be able to build on to it. But there's no appetite for that kind of disruption within a business."
The trend now, and I've seen this in my last two organizations. The trend now is, as it seems, we want to do this gradually over time. And it's less around derisking that we want to do it gradually over time because we want to continue building our business, but we know at the same time as building our business, we need to replace our platform or build the platform that's going to enable our business to grow.
But we want to do it over time so that we have less disruption around that. So we focus on the growth part of the business. So they're kind of the days of, "Okay, we need to do this really quickly because we want to minimize costs." Well, cost isn't really a huge factor there. We'd rather spend more and do this over time because it means that we've been able to grow as an organization at the time.
And also, one of the important parts about where an organization decides that, okay, we're going to take a headless approach. There's not just from a business perspective, and I talked about that notion of, okay, we've got this one platform, let's say, Demandware and we do everything within Demandware and now we're going to have to retrain our teams.
It's also the maturity of the technology organization because to follow headless following the MAC principles, so that's microservices, API for cloud-native headless. Your technology organization needs to be able to be mature enough to actually adopt those guiding principles. Because if you don't, it won't be successful. I know from talking to peers.
I know there have been examples of that, where an organization has decided what we're going to take the headless approach. But they haven't had that maturity within the organization, and it hasn't been successful. So to give you an example of that, cloud native, so it's less of an organization that just moves that data center into the cloud. And it's really okay.
It's in the cloud, we're treating it like data center. That's not cost-effective and ever not leveraging the cloud it to be the same notion with the headless architecture. You need to make sure that you're seeing at all the organization to be very, very comfortable with cloud principles and getting the most from the cloud.
Not just comfortable with not going and put this into a public cloud, and I'm okay with security now key terminology around scalability, best of practice, best of breed, modern engineering technique. So continuous development, continuous delivery. If an organization doesn't have that within the organization or the maturity, then they will struggle with taking ahead of this approach.
TEGUS CLIENT
Got it. Can you elaborate a little bit more on what Demandware isn't able to do to enable a headless approach? It's a cloud product, and I'm sure it has some integration functionality, but where does it fall down when you're trying to implement something that looks more headless?
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
So Demandware, just to be clear, from a PaaS platform, they do have e-commerce API, the code OCAPI. And Demandware, they are all e-commerce platforms, they're now offering a headless offering of their product. So their platform did have a set of comprehensive APIs. However, the platform itself, because it's a Platform as a Service, it doesn't offer this notion of best of breed.
So what I mean by that is if you were to go to and say, I'm going to use Demandware, you're having to use Demandware search engine. You're having to use Demandware's content management system, you're having to use Demandware's basket. You're having to use all of those components because they're tightly coupled.
They provide a comprehensive API that enables you to put whatever UI or experience you want in front of that. But that UI or that experience would still be powered by their search engine, by their basket, by their ordering system. And that's where you are then bound to their platform.
So if you were to look at most Demandware customers, their websites pretty much look the same because it's the same set of features that they're offering. And those features, it's very hard for you to go and use a different feature. You can do it. Of course, this is possible, but then you need to elsewhere, what's that going to cost me in terms of complexity and effort.
I know that they are continuing with their headless road map, and I know that they are developing a new set of APIs, obviously being it's owned by Salesforce, Salesforce also owned MuleSoft, which is an API enterprise and API gateway tool and orchestration. So they are now leveraging MuleSoft to give that more flexibility around those APIs.
But still if you were to use Demandware as your headless engine, you're not getting this notion of best of breed because it's still tightly coupled to their search, their search engine. So I would say Demandware itself, that would be more supportive of a headless motion because it had a comprehensive set of APIs.
But it's the components itself are all still tightly coupled. So I don't see a situation where you would approach Demandware and say, "Hey, Demandware, I just want to use you for basket." And to order capture, I'm sure they would, obviously, do a deal for that. But I don't think it would be that cost-effective because it would still be tightly coupled with their search engine as well.
One advantage, and it's another point to make, which is a company like Demandware, they have quite a comprehensive set of tools. And what I mean by that is what your back-end administration so for catalog management. So how do I bulk import my catalog data, how do I manage that? That actually becomes quite attractive when within an organization.
And a lot of these headless commerce engines, where they are, and they don't make any bones about that. They're focusing purely on basket order capture and catalog. They don't have those comprehensive set of tools. So again, that's something that an organization tends to struggle with when they start to look at some of these headless platforms in the first instance.
And that's where there has to be this learning around the case. Don't look at this and think, well, it doesn't have everything I have today because another platform will be managing as such. Another platform will be managing your content.
It's quite a big shift of thinking within an organization. But once you've got them through that shift to thinking, it's a huge unlock because, one, you're using best of breed; and two, means you've got that competitive edge over your competitors. So if I look at the performance or the actual site speed of toryburch.com, it's considerably faster than its competitors. And that's because we've been able to build a hybrid architecture. So we've been able to take advantage of the latest framework, but also the latest component around that.
TEGUS CLIENT
Got it. And so just to understand on the Salesforce point, if they had priced their product in a way such that you could purchase more à la carte and not have to pay for the functionality that you wanted to use something best of breed, in that type of scenario, hypothetically, do you still think you would have switched and gone to commerce tools? Or would you have stuck with Demandware?
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
I think if it was à la carte, we would have potentially stayed, but the reason why we would have stayed is it would have been more around comfort from the business. So they've really been around the notion of change. Everyone is worth scale of change. So the à la carte would have become more of an attractive option from a business perspective.
However, at a time, their platform just wouldn't lend itself to this notion of à la carte. I'm sure they would have commercially given us agreement that would have been commercially à la carte. But technically, the platform will manage to support that notion of à la carte. But it is a good question because a lot of organizations, but that's always one of the challenges that have the right is to change management and just comfort around the platforms that they have today.
So if we were to do this, which we typically do right, it's not just a technology decision, it's a business decision. And if we can keep what we've got, but obviously, get the benefit from headless, then yes, that's a win for us. My gut feeling is that and maybe they have already, but that my gut feeling is that will be the direction of travel for companies like Salesforce that they will move to more of an à la carte. Because that is the direction of travel as far as most organizations are going.
TEGUS CLIENT
Okay. How important or influential was the marketing and the business team when it came to making the decision on which commerce platform to select?
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
It is very important from there. So we've just had a CMO joined, and the timing was perfect. The CMO sheet come from a much larger organization. And yes, she was a good example of someone that was feeling completely held back by technology. So she had a very proactive interest in what was the path that we were deciding to take and why we were taking this path. So it was very important for them.
Because placing her as a recent example, our biggest complaint, which I think would be not unusual, it's just speed, the speed in which it takes to deliver new functionality or just technology things velocity. One of the questions you asked me at the beginning, just the size of my organization.
The problem that you face when you've got a monolith e-commerce platform. So you could say, "Okay, you're telling me do you know what, let's double the team. Double the team because we want to get double the output." And we know that's not correct, but double the team doesn't mean double the output.
The problem you have, you can have the biggest engineering team in the world. But because of your monolithic architecture, it's not going to make it any more productive to actually build software on that platform because it's one platform. It would be all of us renovating a house and all renovating the same room at the same time.
So if you think about that, say, I'm the one who's putting the covers on, but then there's a guy that needs to put the wiring behind the covers. You can imagine you'll suddenly start to slow down, whereas with a headless architecture, you've got your e-commerce engine that's separate. And you've got your search, which is separate. You've got your customer component, which is separate. You've got your content management, which is separate.
And the architecture itself and the principles behind that micro services, cloud-native API, it enables you to have a much more larger technical organization, but a more efficient technical organization because you were then able to follow best practice you may have come across before this famous white paper by Spotify, where they have this notion of an end-to-end thing that was accountable for one component of the Spotify app.
And that is very much the direction of travel that you see now within modern organizations when looking at e-commerce platforms. We have an experienced team. That team is responsible for just the home page and the grid page and the product page. So they're responsive to that customer experience. We have an e-commerce team who is responsible for basket and order capture. We have a content management team that's responsible for the tooling around that.
So if I look at the size of my organization and the velocity for that and we measure that through dropping new code into the production every two weeks, it's pretty impressive. And the CMO that joined our organization, she came from a much large organization and even she has been pretty much blown away by just how efficient we are.
And then it's not just because we're all Rockstar technologies, not at all. It's because, yes, we've got some good technologies, but it's because we've taken this approach where we've got this decoupled architecture, which means that we've got teams that are completely focused end-to-end team. There's no dependencies, because that's one of the biggest challenges when we've got monolith, right?
If I want to change something here, have I broken something over there? Do I need to go and speak to these four teams to say, "Hey, I'm going to change something here?" When you look at a lot of organizations that have a monolith, and then you look at the size of their engineering team and they could be 100-plus technologists, you think, "Wow, they must be really productive." You're probably not that productive. It's just the fact you need that many team members because of the fact you're working with a monolith. That is very, very important for our business.
TEGUS CLIENT
How long does it take to make a decision on which platform to go with? And then how long does it take to actually put one of these commerce engines deployed? You can't have downtime, right? You can't have downtime, right? So just walk us through how you cut over on all that.
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
Sure. So I'll give you in the context of what we did at Tory Burch. In terms of making the decision, I think that's normally in all organizations. Your existing e-commerce contracts, they're typically minimum three years. So when you're making that decision to pull the plug, you need to kind of make that decision as a way out because you don't want to find yourself in a situation where you have to potentially renew because you haven't given yourself enough time, et cetera, et cetera.
So that thinking needs to happen quite early. So if you've just signed for a three year agreement, the clock starts ticking six months into that three year agreement around making those decisions. And that is the trend nowadays around making that decision is, obviously, going out into the marketplace looking at what's available.
But I don't know if you guys have ever come across that terminology before, but basically, technology spikes. So instead of just looking at PowerPoint presentations and basing a decision on that is actually start to work with the product quite early on and start to do proof of concept and not just a technical proof of concept, but actually start whether that's an initiative that you've got coming up where you could potentially use that product for that initiative, but really start to get your hand dough with the product.
And that's really important because that was one of the challenges that headless vendors face I think personally is it's quite a technical sell. So as a technologist, we've been wanting something like this for years. Just a very simple platform that enables you that has a comprehensive set of APIs that you can add to basket, we're sold straightaway.
But then from a business perspective, it's very hard. It's not a hard sell. It's a hard sell for them to actually look at what the business benefits are of that. And I was found, from my experience, the best way to do that is to do these technical spikes, all these proof of concepts actually. So okay, we're actually going to bring the platform in and you can do that.
It's one of the attractive things at headless because it's so lightweight because it sits in the cloud. You are just getting access with what they call an API key. You're able to start straight away having products in your product in. So the business really starts to see that. And remember, to the point I made there's got to be the organizational shift, so they're shifting the tooling that they're going to be using, also the technology shift.
So it's seeing whether your technology team is ready for this private transformation. So you want to do that the proof of concept. So at Tory Burch, we spent about four months building out a proof of concept, and we involved all of the necessary stakeholders in that to really get their hands in the dough. So that this is the approach we're going to face.
So yes, you tell us where you think this is right or this is wrong, where you think there's gaps, where is your concern. And once we said, okay, that is the direction of travel, what we decided to do, we took the approach of where will we get the biggest gain when we do this.
And the challenge that we have, and it's not an unusual challenge for Demandware customers is one of the attractions with Demandware was it's a PaaS platform. But you had pretty much a white label e-commerce site. So e-commerce start with this site and you can just add products into it quite quickly. So you can be up and running quite quickly. But over time, the actual reference store is what they're called.
Over time, that code base becomes very old. And as a result of that code base being very old and not using modern technology, it is very slow. So we had Google give us, they do this, because we're going to spend a lot of money with them advertising. They said, "Hey, let's review the site and tell you where we think you've room for improvement."
So of course, when they review it and when your site performance is terrible, your mobile experience for a user just got old. So we went right. That's the first part that we're going to actually start to implement. We're going to replace, or we call it, our UI. So we replaced all of our UI. That was the first part of the strangling of the monolith for us, which is where all of our content management now will be managed by Adobe.
We will start there first, and we will replace our home pages and our grid pages. And then what we did was in that first instance we launched our single-page application that was written in react. And that was using Adobe content manager to manage the experience. That was the first big part of our project, and we did that.
And before we started that, again, using the proof-of-concept analogy, we used Adobe for another market in project first, although we haven't been yet, we're quite happy with that. So that end-to-end, that took about nine months. So within nine months, we had replaced our key pages on our site. That would be our home page, our grid page and our product pages. So we moved over to a much more modern architecture and we instantly saw, and that's a great thing.
We internally saw a huge boost in terms of overall conversion because we had a much faster platform. And then while we were doing that, we had a separate team that was working on probably the part that everyone is most nervous about, which is your checkup. So the part where someone is actually buying a product and you're taking money. And we took 11 months to build that.
Again, it wasn't 11 months to just build time. We built that over time, replacing components as we went and we're also using AB testing. So we were testing our old checkout with our new checkout to make sure that, yes, we're going in the right direction, and we're not losing any business.
So all told, we spent about two years until replacing and transitioning to our headless architecture. But at the time of doing that, all of the initiatives that we were doing, they were all like the business initiatives. We went from having a slow site to a faster site, but we've got that gain pretty early on, and we just kept getting the gains as we went as opposed to this notion of light to your point earlier.
Why don't we just get a headless and deal with it and then move over in one step? The problem when you do those types of projects happens, it happens in every organization. You always have to compromise because you're trading against time. And then you get to a situation where you've traded so much, you're not getting anything at the end of that exercise.
So it was about two years in total for us. When I speak to peers and of other projects that I've been involved in and projects that they've been working on to transition to headless, it's typically year around that time frame. It depends on the organization as well. So being the brands that I've worked with, Tory Burch and Burberry, holiday period is the most critical part because it's going to be in luxury and gifting.
So you always want to make sure that you're either deploying before them, so that you've really given your application of a good shape down because you don't want to risk that during holiday. And obviously, as you're coming out of holiday, you've got your markdown period. And then you've got a less risky period when you're doing those launches.
TEGUS CLIENT
Is there anything over the last couple of years that makes deploying the stuff faster like what you just said sounds really painful. Is there any technology developments or best practices emerge in terms of how do you use this that shortens the cycle?
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
I think what I've seen, in terms of shortening the cycle, I think the shorter the cycle is just shortening the cycle is more around what's the appetite from the business. So how much of you all have heard it come into the MVP, minimum viable product. So I'll give an example, I launched mobile app. This is a Burberry. And when we launched it, we launched about search.
And I remember the time everyone was saying that you're going to launch a site, it doesn't have search. Because if you want to launch it now, that's what you get and it was very successful because they didn't have a mobile app, so having a mobile app about search. So part of it is around the business side.
But from a headless perspective, what I'm seeing more and more now, there are frameworks. So there are frameworks and typically, the framework is nothing more than just a set of technologies that have been packaged together and the tooling around those packages. And that's more about shortening the learning curve for a technology organization.
And also, this notion of best of breed, it can be a double of short because it means that it's now possible to use any search engine within theory if it supports the headless. And you can spend a lot of time just being an endless proof of concept. So I'm seeing a lot more trends now where there is more of a package or more of an accelerator.
You may have come across that word, an accelerator, which is, okay, this is your headless, but this is what we're recommending for search experience. This is what we're recommending for customer experience. And this is the architecture blueprint that you want to have if you were going to run that in GCP through cloud platform or this is what it would be for AWS.
I think that is helping, and that's holding: one, because it's less of a learning curve for a technology team; and then, two, it's less of that, okay, you know what, wherever you're more of a traditional organization that wants to always have this kind of like right, we're going to do an RFP. We need to have four vendors in the running.
Those RFPs can run from months and months and months. And typically, if you look at these accelerators, but some of that thinking has been taken out of you already because these are the four best of breed components that have been bought together.
These are what I'm seeing that's helping speed things up. But typically, speeding up is more around the business. And just how much they want to buy it off or how much of an MVP, are they happy to kind of go within the first instance.
TEGUS CLIENT
Got it. Can you speak to why you selected Commercetools? I mean there's a bunch of headless products on the market. I'm curious, what other headless platforms you evaluated and why Commercetools won?
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
We looked at Commercetools. I mean we looked at how these things work normally. When I joined the organization, I was bought in primarily because they felt that had a velocity issue. So they were like, we have quite larger room, but we don't ever seem to get anything launched.
And that was pretty common, and most times organizations look at that and see that being a people issue, but more times than not it's normally a platform issue. So it was right at that time, a colleague had actually gone to a conference. I think it was it was an Adobe conference and Commercetools had a stand there. And that they've had a conversation with Commercetools.
And then I joined, as I say, well, you either need to replace what we've got here. So either replace Demandware with the latest offering in Demandware or it's a good opportunity to go and look at the market. So we got in touch with Gartner because we had a partnership with Gartner. We got their latest thinking. And of course, their latest thinking is headless.
And before headless was given the name headless, what a lot of organizations were doing and it was no different for me. A lot of organizations were taking the Hybris and their ATG and they were extending them with APIs. But it's really a poor person's headless because of the fact that everything is so tightly coupled and it doesn't scale very well. So yes, when we got the Forrester report, they've mentioned Commercetools being really one of the shining lights.
So we engaged with Commercetools and we also engaged with Elastic Path, but we found Commercetools in terms of the product itself, we felt there's a much more stronger product. And the Commercetools' team we found it to be a much stronger to engage with. Stronger in the sense of not just technology strong, but really attuned to the kind of shift of thinking that an organization needs to go through.
So yes, we performed quite a good relationship with them pretty early on. I think also because of the timing of when we engaged with them, they were keen to work with vendors, obviously, of course, they were keen to work with vendors, but really work with vendors with technology teams that really understood the technology well so that they could have a team that's really pushing them. So that's really why we decided to go with Commercetools. It felt like a really good fit from those aspects.
TEGUS CLIENT
What was it about Commercetools' products, in your opinion, that was stronger than Elastic Path and some of the others?
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
I think their core architecture and the way that their architecture scales and as a tooling that they thought around that, as I said before. They're offering a set of nothing more than a set of APIs, really. But actually, what Commercetools has done, they've developed a number of SDKs reference products. These help when you're transitioning over to headless.
And also we had another demand within our organization. We were missing a PIM, product information management, platform and that is another offering of Commercetools. It's definitely not an enterprise PIM by any means, and they make that very clear. But again, that was another added bonus for us that we could leverage the Commercetools to be our PIM because that's another key component of the architecture.
So most of the technology teams that have worked with Commercetools so far to date, from a real technologist's perspective, they really rate the product. It's surprising just how quickly you can build an e-commerce experience with Commercetools with quite a small technology team. And I think that's something that the business has been generally quite surprised about.
And, me personally, is a technology that's been very surprising. We've yet to experience any technical or operational issues we've come across. I'd say of recent, which is pretty welcome actually, as I said in the beginning, it's a hard sell for any organization. It's an easy sell for technologist, a technology organization. Like great, you've got this great comprehensive set of APIs that we can work with, fantastic we've been dreaming about this for a year.
Where do we sign? But in organizations like, where is my search management, where is my content management. And it's that whole notion of, "Well, no, you need other tools to do that. We're just doing this." So it's a really hard sell for them. But I think over time, they focus much more on that course, like materials around getting a CMO, for example, to understand or a CFO when they suddenly go, "Well, I'm going to go with you because you're a lot cheaper."
And they say, "Well, yes, but remember, we're not doing everything your e-commerce, whatever you're paying for hybrids. That's because you're getting search and moving out, but probably not the best of breed. We're just best of breed for the e-com part." So I think that's done a better job with that over the years of explaining that to organization. We're able to sell that to organizations.
TEGUS CLIENT
Can you give us a rough sense for what annual spend is on Commercetools for you all?
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
I can't actually. That would be something that another parts in the organization will be responsible for. One of the advantages that we probably had as an organization at the time of when we engaged with Commercetools because I know they had various different business models. But the kind of the business model that we landed on was their first offering was an API, so consumption-based model, which is pretty much the normalized like the all cloud platforms you pay for what we use.
Whereas we, in the first instance, it's probably not the right time always you can eat, that we have a set cost. I don't have those numbers to hand. But I know that their model has changed since then. I think they're moving more towards orders now. So a number of orders that you capture through that platform, which that's an interesting model if they're going towards the order capture because that moves more towards, not fully, but more towards a Demandware site platform where I know that's commission-based, but you pay for what goes through there.
Well, I think largely, that will be a challenge for an e-commerce platform is when organizations make these decisions. They always get worried about models where you're paying for what you use because they're all scared about cost control. So I don't know if they will continue with that or not. But for most organizations, that's the initial shock that they get shocked in the sense that they go, "Okay, I'm not going to buy Hybris anymore. I'm just going to buy this.” Remember, you're only buying the e-commerce part.
Your Hybris license is for your search and your customer and your content management, this is just your e-commerce cost. So it's significantly less from that perspective. And it was very attractive, but you have to look at it from the bigger picture.
TEGUS CLIENT
What are some things that you think Commercetools can improve upon?
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
I think more the more they do around tooling. And what I mean by tooling is merchandising product they call it product cockpits, and when I talk about merchandising, this would be someone that is typically in charge of or responsible for managing product content. Just a general uptake of the e-commerce platform.
The more that they can offer customers in that space, I think that would be beneficial for them. I mean it's a major decision very early on, and we leverage that. They have a comprehensive set of SDKs, the software development kit that enables you to build on their platform and we've done that. So we've built some custom UIs to give our business teams some kind of like advanced features or power tools.
I think the more they provide for that is advantageous because it just means it's less for you to have to build yourself. But it's a bit of a tricky one because every organization is different. And that's one of the advantages of headless. Our architecture is bespoke to Tory Burch. We've built tools that are efficient for Tory Burch. These may not be tools that are efficient for other organizations. So it's a bit of a tricky balancing out from that perspective. I would say, the more that they were to build those types of tools that would make it more attractive.
TEGUS CLIENT
Great. So if you were to rate Commercetools on a scale of 1 to 10, with 1 being this is a piece of garbage, no one should ever use it; and 10 being, this is the best product I could ever imagine. What would you give Commercetools?
VICE PRESIDENT OF ENGINEERING AT TORY BURCH
I'd say 10 now but I think there's always room for improvement. I would definitely put Commercetools a 9. And the reason why I put Commercetools a 9, and I always sound like I've got my head up, but I've been a technologist for a long time, and I've worked with lots and lots of different e-commerce platforms.
And as I said before, we extended a lot of these monolith platforms with APIs. And I've always had very strong technology themes. And as the Commercetools was the first platform that I saw that was really solving a huge problem with e-commerce platforms, which was a platform that has a comprehensive set of APIs. And not just that, it follows those MAC Architecture. So it's cloud native. It's event-driven. It was a massive, massive game changer.
And that was seeing the hype and then after working with it and having technology teams that have worked with it, I've yet to have anyone come back in crit, to be completely honest with you. If you'd ask me about any other e-commerce platform, I could have given you more of a negative view.
But yes, I haven't had any issues with it so far. It's been very good, it's been very well developed. I mean it really has been exposed with Burberry KJA, I would say Commercetools is a technology organization, and they focused on technology component. Probably too much in the early days. If you look at the material they produced, it was really tech heavy.
And I can see that shift now where they've moved more towards business benefits because they have to. But I would say that was probably one of the successful strategy at the time was like really focus on the technology and build a really good platform. And then yes, one could say then perhaps the platform would tell itself. So that's been very good.
TEGUS CLIENT
Great. I appreciate the time and sharing all these insights, it's been super helpful. Have a good day.
